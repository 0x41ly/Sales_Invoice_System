package com.fwd.salesInvoiceSystem.View;

import javax.swing.*;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

import java.awt.*;
import java.awt.event.ActionListener;
import java.util.ArrayList;

import com.fwd.salesInvoiceSystem.Controller.*;
import com.fwd.salesInvoiceSystem.Model.Invoice;
import com.fwd.salesInvoiceSystem.Model.InvoiceItem;

public class MainFrame extends JFrame {
    // Variables declaration - do not modify
    private javax.swing.JPanel InvoiceInfo;
    private javax.swing.JButton cancelChanges;
    private javax.swing.JButton createInvoice;
    private javax.swing.JLabel custNameLabel;
    private javax.swing.JLabel custNameValue;
    private javax.swing.JButton deleteInvoice;
    private javax.swing.JLabel invoiceDateLabel;
    private javax.swing.JLabel invoiceDateValue;
    private javax.swing.JPanel invoiceItemsPanel;
    private javax.swing.JScrollPane invoiceItemsScroll;
    private javax.swing.JTable invoiceItemsTable;
    private javax.swing.JLabel invoiceNoLabel;
    private javax.swing.JLabel invoiceNoValue;
    private javax.swing.JLabel invoiceTotalLabel;
    private javax.swing.JLabel invoiceTotalValue;


    private javax.swing.JTable invoicesTable;
    private javax.swing.JLabel invoicesTableLabel;
    private javax.swing.JScrollPane invoicesTableScroll;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JMenuItem loadMenuItem;
    private javax.swing.JMenu menu;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JButton saveChanges;
    private javax.swing.JMenuItem saveMenuItem;
    private JButton addInvoiceItem;
    private JButton deleteInvoiceItem;

    // End of variables declaration
    public MainFrame() {
        initComponents();
        //initialize controller
        new MainController(this);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {
        setVisible(true);
        setLocation(50, 50);
        ImageIcon imageIcon = new ImageIcon("src\\com\\fwd\\salesInvoiceSystem\\assets\\icon.png");
        setIconImage(imageIcon.getImage());
        setSize(800, 400);


        leftPanel = new javax.swing.JPanel();
        invoicesTableLabel = new javax.swing.JLabel();
        invoicesTableScroll = new javax.swing.JScrollPane();
        invoicesTable = new javax.swing.JTable();
        deleteInvoice = new javax.swing.JButton();
        createInvoice = new javax.swing.JButton();
        rightPanel = new javax.swing.JPanel();
        InvoiceInfo = new javax.swing.JPanel();
        invoiceNoLabel = new javax.swing.JLabel();
        invoiceNoValue = new javax.swing.JLabel();
        invoiceDateLabel = new javax.swing.JLabel();
        invoiceDateValue = new javax.swing.JLabel();
        custNameLabel = new javax.swing.JLabel();
        custNameValue = new javax.swing.JLabel();
        invoiceTotalLabel = new javax.swing.JLabel();
        invoiceTotalValue = new javax.swing.JLabel();
        invoiceItemsPanel = new javax.swing.JPanel();
        invoiceItemsScroll = new javax.swing.JScrollPane();
        invoiceItemsTable = new javax.swing.JTable();
        addInvoiceItem = new javax.swing.JButton();
        deleteInvoiceItem = new javax.swing.JButton();
        saveChanges = new javax.swing.JButton();
        cancelChanges = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        menu = new javax.swing.JMenu();
        loadMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        exitMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sales Invoice System");

        leftPanel.setPreferredSize(new java.awt.Dimension(197, 255));

        invoicesTableLabel.setText("Invoices Table");

        invoicesTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{

                },
                new String[]{
                        "No.", "Date", "Customer", "Total"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                    false, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        invoicesTableScroll.setViewportView(invoicesTable);

        deleteInvoice.setText("Delete Invoice");


        createInvoice.setText("New Invoice");


        javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(leftPanelLayout);
        leftPanelLayout.setHorizontalGroup(
                leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(leftPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(invoicesTableScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                        .addComponent(invoicesTableLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, leftPanelLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(createInvoice)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deleteInvoice)
                                .addGap(44, 44, 44))
        );
        leftPanelLayout.setVerticalGroup(
                leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(leftPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(invoicesTableLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(invoicesTableScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(deleteInvoice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(createInvoice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(16, 16, 16))
        );

        createInvoice.getAccessibleContext().setAccessibleDescription("");

        invoiceNoLabel.setText("Invoice Number :");

        invoiceDateLabel.setText("Invoice Date :");

        custNameLabel.setText("Customer Name :");

        invoiceTotalLabel.setText("Invoice Total :");

        javax.swing.GroupLayout InvoiceInfoLayout = new javax.swing.GroupLayout(InvoiceInfo);
        InvoiceInfo.setLayout(InvoiceInfoLayout);
        InvoiceInfoLayout.setHorizontalGroup(
                InvoiceInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(InvoiceInfoLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(InvoiceInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(invoiceDateLabel)
                                        .addComponent(custNameLabel)
                                        .addComponent(invoiceTotalLabel)
                                        .addComponent(invoiceNoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(InvoiceInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(invoiceNoValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(invoiceDateValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(custNameValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(invoiceTotalValue, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        InvoiceInfoLayout.setVerticalGroup(
                InvoiceInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(InvoiceInfoLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(InvoiceInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(invoiceNoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(invoiceNoValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(InvoiceInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(invoiceDateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(invoiceDateValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(InvoiceInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(custNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(custNameValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(InvoiceInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(invoiceTotalLabel)
                                        .addComponent(invoiceTotalValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
        );

        invoiceItemsTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{

                },
                new String[]{
                        "No.", "Item Name", "Item Price", "Count", "Item Total"
                }
        ));
        invoiceItemsScroll.setViewportView(invoiceItemsTable);

        addInvoiceItem.setText("Add item");

        deleteInvoiceItem.setText("Delete Item");

        javax.swing.GroupLayout invoiceItemsPanelLayout = new javax.swing.GroupLayout(invoiceItemsPanel);
        invoiceItemsPanel.setLayout(invoiceItemsPanelLayout);
        invoiceItemsPanelLayout.setHorizontalGroup(
                invoiceItemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(invoiceItemsPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(invoiceItemsScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                                .addContainerGap())
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, invoiceItemsPanelLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(addInvoiceItem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deleteInvoiceItem)
                                .addGap(44, 44, 44))
        );
        invoiceItemsPanelLayout.setVerticalGroup(
                invoiceItemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(invoiceItemsPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(invoiceItemsScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(invoiceItemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(addInvoiceItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(deleteInvoiceItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
        );

        saveChanges.setText("Save");


        cancelChanges.setText("Cancel");

        javax.swing.GroupLayout rightPanelLayout = new javax.swing.GroupLayout(rightPanel);
        rightPanel.setLayout(rightPanelLayout);
        rightPanelLayout.setHorizontalGroup(
                rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(rightPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(invoiceItemsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(InvoiceInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rightPanelLayout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(saveChanges)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(cancelChanges)))
                                .addContainerGap())
        );
        rightPanelLayout.setVerticalGroup(
                rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(rightPanelLayout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(InvoiceInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(invoiceItemsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(cancelChanges)
                                        .addComponent(saveChanges, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        saveChanges.getAccessibleContext().setAccessibleDescription("");
        cancelChanges.getAccessibleContext().setAccessibleDescription("");

        menu.setMnemonic('F');
        menu.setText("File");

        loadMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.ALT_DOWN_MASK));
        loadMenuItem.setMnemonic('L');
        loadMenuItem.setText("Load File");

        menu.add(loadMenuItem);

        saveMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_DOWN_MASK));
        saveMenuItem.setMnemonic('S');
        saveMenuItem.setText("Save File");
        menu.add(saveMenuItem);
        menu.add(jSeparator1);

        exitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.ALT_DOWN_MASK));
        exitMenuItem.setMnemonic('E');
        exitMenuItem.setText("Exit");

        menu.add(exitMenuItem);

        menuBar.add(menu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(leftPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rightPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(leftPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(rightPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );

        pack();
    }// </editor-fold>

    public JTable getInvoicesTable() {
        return invoicesTable;
    }

    public JTable getInvoiceItemsTable() {
        return invoiceItemsTable;
    }


    public void exitMenuItem(ActionListener actionListener) {
        exitMenuItem.addActionListener(actionListener);
    }

    public void loadMenuItem(ActionListener actionListener) {
        loadMenuItem.addActionListener(actionListener);
    }

    public void saveMenuItem(ActionListener actionListener) {
        saveMenuItem.addActionListener(actionListener);
    }

    public void createInvoice(ActionListener actionListener) {
        createInvoice.addActionListener(actionListener);
    }

    public void deleteInvoice(ActionListener actionListener) {
        deleteInvoice.addActionListener(actionListener);
    }

    public void saveChanges(ActionListener actionListener) {
        saveChanges.addActionListener(actionListener);
    }

    public void cancelChanges(ActionListener actionListener) {
        cancelChanges.addActionListener(actionListener);
    }

    public void selectRowFromInvoicesTable(ListSelectionListener actionListener) {
        invoicesTable.getSelectionModel().addListSelectionListener(actionListener);
    }

    public void addInvoiceItem(ActionListener actionListener) {
        addInvoiceItem.addActionListener((actionListener));
    }

    public void deleteInvoiceItem(ActionListener actionListener) {
        deleteInvoiceItem.addActionListener((actionListener));
    }

    public void setInvoicesTableInfo(ArrayList<Invoice> invoicesArrayList) {
        DefaultTableModel defaultTableModel = (DefaultTableModel) invoicesTable.getModel();
        defaultTableModel.setRowCount(0);

        int i = 0;
        while (i < invoicesArrayList.size()) {

            Invoice invoice = invoicesArrayList.get(i);
            defaultTableModel.addRow(invoice.toArray());
            i++;
        }
    }

    private void setInvoiceItemsTableInfo(ArrayList<InvoiceItem> invoiceItems) {
        DefaultTableModel defaultTableModel = (DefaultTableModel) invoiceItemsTable.getModel();
        defaultTableModel.setRowCount(0);
        int i = 0;
        while (i < invoiceItems.size()) {

            InvoiceItem invoiceItem = invoiceItems.get(i);
            defaultTableModel.addRow(invoiceItem.toArray());
            i++;
        }

    }

    public void InvoiceInfo(Invoice invoice) {
        invoiceNoValue.setText(String.valueOf(invoice.getNo()));
        custNameValue.setText(invoice.getCustomerName());
        invoiceDateValue.setText(invoice.getDate().toString());
        invoiceTotalValue.setText(String.valueOf(invoice.getTotal()));
        this.setInvoiceItemsTableInfo(invoice.getInvoiceItems());
    }

    public void resetInvoiceInfo(){
        invoiceNoValue.setText("");
        custNameValue.setText("");
        invoiceDateValue.setText("");
        invoiceTotalValue.setText("");
        this.setInvoiceItemsTableInfo(new ArrayList<>());
    }

}




